# ===========================================
# Server configuration
# ===========================================

# Name of the server that will be used in response headers
#platform.server.name=""
# Host is the domain name the web server will reply to.
#platform.server.host="localhost"
# Address on which the server will bind to
# Default value is 0.0.0.0 which will bind to all network interfaces
#platform.server.address="0.0.0.0"
# StaticPath where static assets are loaded from
#platform.server.staticPath="/var/www"
# Port to use to bind the HTTP server to.
platform.server.port=81
# ReadTimeout for client requests. A timeout of 0 means no timeout.
platform.sever.readTimeout="30s"
# WriteTimeout for client responses. A timeout of 0 means no timeout.
platform.server.writeTimeout="30s"
# IdleTimeout for keep-alive connections. A timeout of 0 means no timeout.
#platform.server.idleTimeout=0
# PostMaxSize is the maximum amount of payload a client can send.
#platform.server.maxPostSize="100MB"
# UseCompression will enable a middleware to compress server responses
# using one of the supported compression methods (GZip, Deflate, Br)
#platform.server.gzip=true
# EnableTracing will enable the TraceHeader on all responses.
#platform.server.security.tracing.enabled=yes
# TraceRequired indicates that this service will be a middleware or backend service and
# all requests coming to it should come from a service that emits the tracing header, thus making
# it a requirement on all incoming requests.
#platform.server.security.tracing.required=no

# Enable HTTPS
#platform.server.https.enabled=no
# Try to automatically generate or acquire SSL certificate from LetsEncrypt
#platform.server.https.auto=yes
# ethod of auto generated certificate to use. Available options are lets-encrypt, self-signed or auto
#platform.server.https.autoType="lets-encrypt"
# Default HTTPS port
#platform.server.https.port=433
# Path to server certificate
#platform.server.https.cert=
# Path to server private key
#platform.server.https.key=

# CSRFTokenRequired indicates that POST, PUT, PATCH methods should have a CSRF token header or they will be discarded
#platform.server.security.csrfRequired=no

# DNT flag indicates if the server should respect Do Not Track requests
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/DNT
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Tk
#platform.server.security.dnt=yes
# PreventIFraming is set if you want to prevent web page to be embedded in a iframe by adding
# the X-Frame-Options header which tells the browser the page should not be rendered in an iframe
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
#platform.server.security.preventIFraming=no
# XSSProtection provides protection against cross-site scripting attack (XSS)
# by setting the `X-XSS-Protection` header.
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
#platform.server.security.XSSProtection=yes
# HSTS (http strict transport security header) enables the Strict-Transport-Security header
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
#platform.server.security.hsts=no
# ContentTypeOptions enables the X-Content-Type-Options response HTTP header which is a marker used by
# the server to indicate that the MIME types advertised in the Content-Type headers should not be
# changed and be followed.
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
#platform.server.security.contentTypeOptions=yes
# HSTSDirectives enables the HSTS Strict-Transport-Security header directives
#platform.server.security.HSTSDirectives="max-age=63072000; includeSubDomains"
# CSP enables Content-Security-Policy header
# Header can also be used for reporting by adding 'report-uri http://reportcollector.example.com/collector.cgi'
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
#platform.server.security.csp="default-src 'self'"
# Whitelist contains a comma separated list of IP's that can access the application.
# The IP's can be defined as simple IP addresses, IP ranges, CIDR ranges and *
#platform.server.security.whitelist=""
# Blacklist contains a comma separated list of IP's that cannot access the application.
# The IP's can be defined as simple IP addresses, IP ranges, CIDR ranges and *
#platform.server.security.blacklist=""
# Server security with url scan
#platform.server.security.urlScanner=yes
# IP ban time for url scan detection
#platform.server.security.banDuration="10m"
# Enabled the brute force protection using a leaky bucket rate limiter
#platform.server.security.bruteForce.enabled=no
# Rate parameter for the leaky bucket
#platform.server.security.bruteForce.rate=1
# Capacity parameter for the leaky bucket
#platform.server.security.bruteForce.capacity=10
# The Access-Control-Allow-Origin response header indicates whether the response can be
# shared with requesting code from the given origin.
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin
platform.server.security.cors.origin="localhost"
#platform.server.security.cors.origin="*"
# The Access-Control-Allow-Headers response header is used in response to a preflight request
# which includes the Access-Control-Request-Headers to indicate which HTTP headers can be used
# during the actual request.
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers
platform.server.security.cors.headers="Origin, Content-Type, Authorization, Accept, Content-Disposition,X-Session-Id,Access-Control-Allow-Credentials, Referral-Code"
# The Access-Control-Expose-Headers response header indicates which headers can be exposed
# as part of the response by listing their names.
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers
#platform.server.security.cors.expose="*"
# The Access-Control-Allow-Methods response header specifies the method or methods allowed
# when accessing the resource in response to a preflight request.
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods
platform.server.security.cors.methods="POST,PUT,GET,DELETE,OPTIONS"


# Enable cache headers for static resources
#platform.server.cache.enable=yes
# TTL for static resources (js, css, images etc)
#platform.server.cache.ttl=3d

# ===========================================
# Sessions configuration
# ===========================================
# Store indicates which data store to use to hold the sessions.
#  Available built in stores are "redis", "mem"
#platform.server.session.store="redis"
# Enable the use of sessions
platform.server.session.enabled=yes
# UseCookie will enable client sessions through cookies
platform.server.session.useCookie=yes
# CookieName for the session cookie
platform.server.session.cookieName="_session"
# HeaderName of the header that will contain the session id
platform.server.session.headerName="X-Session-Id"
# TTL is the maximum inactivity of a session till it gets removed
platform.server.session.ttl="1h"

# ===========================================
# Database configuration
# ===========================================

# What database engine to use.
platform.db.addr="localhost"
db.port=5432
platform.db.name="testdb"
platform.db.username="postgres"
platform.db.password="postgres"
platform.db.connMaxIdleTime="1d"
platform.db.connectionMaxLifetime="1d"
platform.db.maxIDLEConnectionCount=20
platform.db.maxOpenConnectionCount=10


# ===========================================
# Cache configuration
# ===========================================

# Cache engine to use. Available engines are "bigCache", "freeCache", "memCache", "redis"
#platform.cache.engine="bigCache"

# Number of cache shards, value must be a power of two
#platform.cache.bigcache.shards=
# Time after which entry can be evicted
#platform.cache.bigcache.lifeWindow=
# Interval between removing expired entries (clean up).
# If set to <= 0 then no action is performed. Setting to < 1 second is counterproductive â€” bigcache has a one second resolution.
#platform.cache.bigcache.cleanWindow=
# Max number of entries in life window. Used only to calculate initial size for cache shards.
# When proper value is set then additional memory allocation does not occur.
#platform.cache.bigcache.maxEntriesInWindow=
# Max size of entry in bytes. Used only to calculate initial size for cache shards.
#platform.cache.bigcache.maxEntrySize=
# Verbose mode prints information about new memory allocation
#platform.cache.bigcache.verbose=no
# HardMaxCacheSize is a limit for cache size in MB. Cache will not allocate more memory than this limit.
# It can protect application from consuming all available memory on machine, therefore from running OOM Killer
# Default value is 0 which means unlimited size. When the limit is higher than 0 and reached then
# the oldest entries are overridden for the new ones.
#platform.cache.bigcache.hardMaxCacheSize=

# Size in bytes to allocate for local cache 100 * 1024 * 1024
#platform.cache.freecache.size=104857600
# Sync cache across cluster
#platform.cache.freecache.sync=no

# Memcache server address
#platform.cache.memcache.addr="localhost:11211"

# Redis server address
platform.cache.redis.addr="localhost:6379"
#platform.cache.redis.password=""

# ===========================================
# Email configuration
# ===========================================

#mail.smtp.addr=""
#mail.smpt.port=587
#mail.smpt.secure=yes
#mail.smtp.username=
#mail.smtp.password=
#mail.stmp.from=
# QueueSize is the amount of email that can be added to queue before starting to block
#mail.smtp.queueSize=1000
# IdleTimeout is the amount of time to keep the SMTP connection alive after the emails from the queue have been sent
#mail.smtp.idleTimeout=5m

# ===========================================
# Logging configuration
# ===========================================

# Log output. Available options are "stdout", "disabled", "/file/name"
log.writer="stdout"
# Format in which to encode the logs. Available options are "none", "text", "json"
log.format="text"
# Maximum log level to output. Available options are "panic", "fatal", "error", "waning", "info", "debug"
log.level="debug"
# Maximum file size after which the log file will be rotated
#log.maxFileSize=10000000


# ===========================================
# API configuration
# ===========================================

# Path to CORE service
api.core.endpoint="http://core"

#EOF
